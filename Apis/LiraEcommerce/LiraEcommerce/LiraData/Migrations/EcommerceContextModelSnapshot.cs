// <auto-generated />
using System;
using LiraData.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LiraData.Migrations
{
    [DbContext(typeof(EcommerceContext))]
    partial class EcommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LiraCore.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AliquotaCofins")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("AliquotaICMS")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("AliquotaPis")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int?>("CFOPICMS")
                        .HasColumnType("int");

                    b.Property<int?>("CSTICMS")
                        .HasColumnType("int");

                    b.Property<int?>("CSTPisCofins")
                        .HasColumnType("int");

                    b.Property<int?>("Categoria")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Linha")
                        .HasColumnType("int");

                    b.Property<string>("NCM")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Origem")
                        .HasColumnType("int");

                    b.Property<decimal>("PercDescAVista")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TipoICMS")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorBruto")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("VlAVista")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("VlDescAVista")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("LiraCore.Entidades.ProdutoEan", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<decimal>("EAN")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("ProdutoId", "EAN");

                    b.ToTable("ProdutoEan");
                });

            modelBuilder.Entity("LiraCore.Entidades.ProdutoEstoque", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("TipoMedida")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId");

                    b.ToTable("ProdutoEstoque");
                });

            modelBuilder.Entity("LiraCore.Entidades.ProdutoImagem", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LinkImagem")
                        .HasColumnType("varchar(200)");

                    b.HasKey("ProdutoId");

                    b.ToTable("ProdutoImagem");
                });

            modelBuilder.Entity("LiraCore.Entidades.TipoProduto", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("TipoProduto");
                });

            modelBuilder.Entity("LiraCore.Entidades.ProdutoEan", b =>
                {
                    b.HasOne("LiraCore.Entidades.Produto", "Produto")
                        .WithMany("Eans")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LiraCore.Entidades.ProdutoEstoque", b =>
                {
                    b.HasOne("LiraCore.Entidades.Produto", null)
                        .WithOne("Estoque")
                        .HasForeignKey("LiraCore.Entidades.ProdutoEstoque", "ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LiraCore.Entidades.ProdutoImagem", b =>
                {
                    b.HasOne("LiraCore.Entidades.Produto", null)
                        .WithOne("ProdutoImagem")
                        .HasForeignKey("LiraCore.Entidades.ProdutoImagem", "ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LiraCore.Entidades.TipoProduto", b =>
                {
                    b.HasOne("LiraCore.Entidades.Produto", "Produto")
                        .WithOne("TipoProduto")
                        .HasForeignKey("LiraCore.Entidades.TipoProduto", "ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
